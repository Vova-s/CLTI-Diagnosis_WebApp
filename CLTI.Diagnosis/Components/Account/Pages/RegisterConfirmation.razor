@page "/Account/RegisterConfirmation"
@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using CLTI.Diagnosis.Data
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register confirmation</PageTitle>

<div class="flex flex-col items-center justify-center min-h-screen bg-gray-100 px-4">
    <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 w-full max-w-md text-center">
        <svg class="w-16 h-16 text-green-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
        </svg>

        <h1 class="text-2xl font-bold mb-4">Registration Confirmation</h1>

        <StatusMessage Message="@statusMessage" />

        @if (emailConfirmationLink is not null)
        {
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4 text-left">
                <p class="text-yellow-800">
                    This app does not currently have a real email sender registered, see
                    <a href="https://aka.ms/aspaccountconf" class="text-blue-500 hover:underline">these docs</a>
                    for how to configure a real email sender.
                </p>
                <p class="mt-2 text-yellow-800">
                    Normally this would be emailed:
                    <a href="@emailConfirmationLink" class="text-blue-500 hover:underline">Click here to confirm your account</a>
                </p>
            </div>
        }
        else
        {
            <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-6 text-left">
                <p class="text-blue-700" role="alert">
                    Please check your email to confirm your account.
                </p>
                <p class="mt-2 text-blue-700">
                    If you don't see the email, check your spam folder.
                </p>
            </div>
        }

        <div class="mt-6">
            <a href="/Account/Login" class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-6 rounded transition duration-200">
                Return to Login
            </a>
        </div>
    </div>
</div>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}